{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasircioglu/ai-platform/src/context/actions.tsx"],"sourcesContent":["import { AuthService } from \"../services/auth-service\";\n\nexport const signInAction = async (email: string, password: string) => {\n  const user = await AuthService.signIn(email, password);\n  return user;\n};\n"],"names":[],"mappings":";;;;;;;;;AAEO,MAAM,eAAe,OAAO,OAAe;IAChD,MAAM,OAAO,MAAM,YAAY,MAAM,CAAC,OAAO;IAC7C,OAAO;AACT"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasircioglu/ai-platform/src/context/auth.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState } from \"react\";\nimport { User } from \"../models/user\";\nimport * as React from \"react\";\nimport { signInAction } from \"./actions\";\nexport type AuthContextType = {\n  user: User | undefined;\n};\n\nexport type AuthProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const AuthContext = createContext<AuthContextType>({\n  user: undefined,\n});\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<User | undefined>(undefined);\n\n\n  const signIn = async (email: string, password: string) => {\n    const user = await signInAction(email, password);\n    setUser(user);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;;;AALA;;;AAcO,MAAM,4BAAc,CAAA,GAAA,4RAAA,CAAA,gBAAa,AAAD,EAAmB;IACxD,MAAM;AACR;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAqB;;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAoB;IAGnD,MAAM,SAAS,OAAO,OAAe;QACnC,MAAM,OAAO,MAAM,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD,EAAE,OAAO;QACvC,QAAQ;IACV;IAEA,qBACE,4TAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;QAAK;kBACjC;;;;;;AAGP;GAda;KAAA;AAgBN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,4RAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}