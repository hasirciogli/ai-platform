{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { jwtVerify } from \"jose\";\n\nconst AuthCheck = async (req: NextRequest) => {\n  const token = req.cookies.get(\"auth-token\")?.value;\n\n  if (!token) {\n    return false;\n  }\n  try {\n    const { payload } = await jwtVerify(\n      token,\n      new TextEncoder().encode(process.env.AUTH_JWT_SECRET)\n    );\n\n    return payload;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default async function middleware(req: NextRequest) {\n  const payload = await AuthCheck(req);\n  if (payload) {\n    return NextResponse.next();\n  }\n\n  return NextResponse.redirect(new URL(\"/login\", req.url));\n}\n\nexport const config = {\n  matcher: [\"/dashboard/:path*\"],\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;AAGA,MAAM,YAAY,OAAO;IACvB,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe;IAE7C,IAAI,CAAC,OAAO;QACV,OAAO;IACT;IACA,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,yMAAA,CAAA,YAAS,AAAD,EAChC,OACA,IAAI,cAAc,MAAM,CAAC,QAAQ,GAAG,CAAC,eAAe;QAGtD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEe,eAAe,WAAW,GAAgB;IACvD,MAAM,UAAU,MAAM,UAAU;IAChC,IAAI,SAAS;QACX,OAAO,oTAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,OAAO,oTAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;AACxD;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoB;AAChC"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}